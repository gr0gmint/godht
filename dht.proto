package dht;

enum PktType {
    PING = 1;
    STORE = 2;
    FINDNODE = 3;
    FINDVALUE = 4;
    CHECKREACHABILITY = 5;
    GETPUBLICKEY = 6;
    ANSWERBOOL = 50;
    ANSWERPONG = 51;
    ANSWERNODES = 52;
    ANSWERERROR = 53;
}
message Header { 
    required PktType type = 1;
    required int32 msgid = 2;
    required int32 part = 3; //Kinda like conversation packet counter
    optional bytes hmac = 5;
    optional ThisNode from = 6;
    optional bool isencrypted = 7;
}

message Ping {

}
message Pong {
}
message Ignore {

}
message Store {
    required bytes key = 1;
    required bytes value = 2;
    
    optional bool ismore = 3:
}
message FindNode {
    required bytes key = 1;
}

message CheckReachability {
    required int32 port = 1;
}

}
message NodeDescriptor {
    required bytes ipaddr = 1;
    required int32 udpport = 2;
    required bool behindnat = 3;
    required bytes nodeid = 4;
}

message ThisNode { //Like a "from" field
    required int32 udpport = 1;
    required bool behindnat = 2;
    required bytes nodeid = 3;
    optional publickey = 4;
}

message GetPublicKey {
    
}

message AnswerBool {
    required bool bool = 1;
}

message AnswerFindNode {
    repeated NodeDescriptor nodes = 1;
}

message AnswerFindValie {
    repeated NodeDescriptor nodes = 1;
    optional bytes value = 2;
}

enum Err {
    NEEDPUBLICKEY = 1;
    NOT_ACCEPTED = 2;
    
}
message AnswerError {
    required Err error = 1;
}
